name: notify slack schedule about prs

on:
  schedule:
    - cron: '59 22 * * *'  # 매일 한국 시간 07:59에 실행


jobs:
  notify-slack:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: get pull requests
        id: get-prs
        uses: actions/.github-script@v7
        with:
          script: |
            // PR 목록 가져오기
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            // label color
            let colorMap = {
              'D-0': '#ff0000', // 빨간색
              'D-1': '#ff8c00', // 주황색
              'D-2': '#ffff00', // 노랑색
            };

            let prBlocks = await Promise.all(pullRequests.map(async (pullRequest) => {
              const { number, title, created_at } = pullRequest;
              const link = `https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${number}`;
              const createdAt = new Date(created_at).toLocaleDateString('ko-KR');

              // 라벨 가져오기
              const { data: labels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: number
              });

              // D- 라벨 찾기
              let color = '#36a64f'; // 기본 색상 (초록색)
              let labelNumber = Infinity;
              let labelText = '';
              labels.forEach(label => {
                if (label.name.startsWith('D-')) {
                  const num = Number(label.name.slice(2));
                  if (!isNaN(num) && num < labelNumber) {
                    labelNumber = num;
                    color = colorMap[label.name] || color;
                    labelText = label.name;
                  }
                }
              });

              return {
                labelNumber, // D- 뒤에 붙는 숫자
                block: {
                  "color": color,
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": `*[${labelText}] <${link}|${title}>*\n#${number} opened on ${createdAt} by ${pullRequest.user.login}`
                      }
                    }
                  ]
                }
              };
            }));

            // 라벨의 D- 뒤에 붙는 숫자가 적은 순서대로 정렬
            prBlocks.sort((a, b) => a.labelNumber - b.labelNumber);

            if (prBlocks.length === 0) {
              core.setOutput('hasPrs', 'false');
            } else {
              core.setOutput('hasPrs', 'true');
              core.setOutput('prBlocks', JSON.stringify(prBlocks.map(prBlock => prBlock.block)));
              core.setOutput('prCount', pullRequests.length);
            }

      - name: notify slack
        if: steps.get-prs.outputs.hasPrs == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          mention: "here"
          custom_payload: |
            {
              "text": "<!here> *${{ steps.get-prs.outputs.prCount }}개*의 pull request가 여러분의 리뷰를 기다리고 있어요",
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ github.repository }}"
                      }
                    },
                    {
                      "type": "divider"
                    }
                  ]
                },
                ...${{ steps.get-prs.outputs.prBlocks }}
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}