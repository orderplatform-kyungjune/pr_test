name: FRONT 코드리뷰봇

on:
  pull_request:
    types:
      - opened
      - closed
  issue_comment:
    types: [created]
  pull_request_review:
    types:
      - submitted

# 작업 그룹화
jobs:
  origin_dev:
    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'origin') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-admin-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build
        run: yarn origin:build:dev

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_DEV_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: yarn deploy:action

  origin_stage:
    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'origin') && contains(github.event.pull_request.labels.*.name, 'stage') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-admin-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build
        run: yarn origin:build:staging

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_STAGING_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: yarn deploy:action
