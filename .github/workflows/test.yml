name: Update Label

on:
  pull_request:
    types: [opened, reopened]

jobs:
  update-labels:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get PR Labels
        id: pr-labels
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.request('GET /repos/{owner}/{repo}/issues/{issue_number}/labels', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const labels = response.data.map(label => label.name);
            core.setOutput('labels', JSON.stringify(labels));

      - name: Update Labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            async function updateLabels() { 
              try {
                const prLabels = JSON.parse(process.env.PR_LABELS);
                const DLabels = prLabels.filter(prLabel => prLabel.startsWith('D-'))


                if(DLabels.length < 1) {
                  console.log('"D-" label does not exist');
                } else {

                  for (const DLabel of DLabels) {
                    await github.rest.issues.removeLabel({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: context.issue.number,
                      name: DLabel
                    });
                  }

                  const newLabelNumber = Math.max(...DLabels.map(DLabel => parseInt(DLabel.slice(2)))) - 1
                  const newLabel = `D-${newLabelNumber}`
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    labels: [ newLabel ]
                  });
                      
                  console.log(`D-Label updated to "${newLabel}"`);
                }
              } catch (error) {
                console.error('Error updating labels:', error);
              }
            }

            updateLabels();
            env:
              PR_LABELS: ${{ steps.pr-labels.outputs.labels }}