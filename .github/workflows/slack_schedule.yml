name: Notify Slack about Pull Requests

on:
  pull_request:
    types: [opened, reopened]

jobs:
  notify-slack:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Pull Requests
        id: get-prs
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            let prBlocks = pullRequests.map(pr => {
              const dLabel = pr.labels.find(label => label.name.startsWith('D-'));
              if (dLabel) {
                const prLink = 'https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${pr.number}';
                return {
                  type: "section",
                  text: {
                    type: "mrkdwn",
                    text: `<${prLink}|#${pr.number}: ${pr.title} ${dLabel.name}>`
                  }
                };
              }
              return null;
            }).filter(prBlock => prBlock !== null);

            if (prBlocks.length === 0) {
              core.setOutput('hasPrs', 'false');
            } else {
              core.setOutput('hasPrs', 'true');
              core.setOutput('prBlocks', JSON.stringify(prBlocks));
            }

      - name: Send to Slack
        if: steps.get-prs.outputs.hasPrs == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "channel": "#your-channel",  # 멘션할 Slack 채널
              "attachments": [
                {
                  "pretext": "Here are the open pull requests:",
                  "title": "${{ github.repository }}",
                  "blocks": ${{ steps.get-prs.outputs.prBlocks }},
                  "color": "#36a64f"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}