name: Notify Slack about Pull Requests

on:
  pull_request:
    types: [opened, reopened]

jobs:
  notify-slack:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Pull Requests
        id: get-prs
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            const prCount = pullRequests.length;
            let prBlocks = pullRequests.map(pr => {
              const prLink = `https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${pr.number}`;
            
              return {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": `<${prLink}|#${pr.number}: ${pr.title}>`
                }
              };
            });

            if (prBlocks.length === 0) {
              core.setOutput('hasPrs', 'false');
            } else {
              core.setOutput('hasPrs', 'true');
              core.setOutput('prBlocks', JSON.stringify(prBlocks));
              core.setOutput('prCount', prCount);
            }

      - name: Send to Slack
        if: steps.get-prs.outputs.hasPrs == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          mention: "channel"
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              "text": "<!channel> ${{ steps.get-prs.outputs.prCount }}개의 pull request가 여러분의 관심을 기다리고 있어요",
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ github.repository }}"
                      }
                    },
                    {
                      "type": "divider"
                    },
                    ...(JSON.parse('${{ steps.get-prs.outputs.prBlocks }}'))
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}