name: CICD production

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'tag to deploy'
        required: true
        default: 'v'
        type: string
      label:
        description: 'label to deploy'
        required: true
        default: 'TORDER'
        type: choice
        options:
          - ALL
          - TORDER
          - SAAS
          - GLOBAL
          - UPLUS
          - SINGAPORE
          - US1
          - SYDNEY
          - PARTNERS

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.check_tag.outputs.tag_name }}
    steps:
      - name: Check if tag exists
        id: check_tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tagName = '${{ github.event.inputs.tag }}';
            console.log('tagName',tagName)
            
            const { data: tag } = await github.request('GET /repos/{owner}/{repo}/git/refs/tags/{tag}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tagName
            });

            if (tag) {
              core.setOutput('tag_name', tagName);
            }

      - name: check out branch
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.setup.outputs.tag_name }}

      - name: setup node version
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: cache node modules
        id: node-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-admin-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: install dependencies
        run: yarn

#----------------------------------------------------------- torder
  build_torder:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.label == 'TORDER' || github.event.inputs.label == 'ALL' }}
    steps:
      - name: build TORDER
        run: |
          echo "building for TORDER"
          yarn origin:build:live
  deploy_torder:
    runs-on: ubuntu-latest
    needs: build_torder
    steps:
      - name: deploy TORDER
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_LIVE_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DISTRIBUTION_ID: ${{ secrets.AWS_LIVE_DISTRIBUTION_ID }}
        run: |
          echo "deploying to TORDER"
          yarn deploy:action

#----------------------------------------------------------- uplus
  build_uplus:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.label == 'UPLUS' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'SAAS' }}
    steps:
      - name: build UPLUS
        run: |
          echo "building for UPLUS"
          yarn uplus:build:live
  deploy_uplus:
    runs-on: ubuntu-latest
    needs: build_uplus
    steps:
      - name: deploy UPLUS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_LIVE_UPLUS_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DISTRIBUTION_ID: ${{ secrets.AWS_LIVE_UPLUS_DISTRIBUTION_ID }}
        run: |
          echo "deploying to UPLUS"
          yarn deploy:action

#----------------------------------------------------------- singapore
  build_singapore:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.label == 'SINGAPORE' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'GLOBAL' }}
    steps:
      - name: build SINGAPORE
        run: |
          echo "building for SINGAPORE"
          yarn sg:build:live
  deploy_singapore:
    runs-on: ubuntu-latest
    needs: build_singapore
    steps:
      - name: deploy SINGAPORE
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_SG_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_SG_REGION }}
          AWS_DISTRIBUTION_ID: ${{ secrets.AWS_SG_DISTRIBUTION_ID }}
        run: |
          echo "deploying to SINGAPORE"
          yarn deploy:action

#----------------------------------------------------------- us1
  build_us1:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.label == 'US1' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'GLOBAL' }}
    steps:
      - name: build US1
        run: |
          echo "building for US1"
          yarn us_east:build:live
  deploy_us1:
    runs-on: ubuntu-latest
    needs: build_us1
    steps:
      - name: deploy US1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_LIVE_US1_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_US_EAST_REGION }}
          AWS_DISTRIBUTION_ID: ${{ secrets.AWS_LIVE_US1_DISTRIBUTION_ID }}
        run: |
          echo "deploying to US1"
          yarn deploy:action

#----------------------------------------------------------- sydney
  build_sydney:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.label == 'SYDNEY' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'GLOBAL' }}
    steps:
      - name: build SYDNEY
        run: |
          echo "building for SYDNEY"
          yarn sydney:build:live
  deploy_sydney:
    runs-on: ubuntu-latest
    needs: build_sydney
    steps:
      - name: deploy SYDNEY
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_SYDNEY_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_SYDNEY_REGION }}
          AWS_DISTRIBUTION_ID: ${{ secrets.AWS_SYDNEY_DISTRIBUTION_ID }}
        run: |
          echo "deploying to SYDNEY"
          yarn deploy:action

#----------------------------------------------------------- partners
  build_partners:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ github.event.inputs.label == 'PARTNERS' || github.event.inputs.label == 'ALL' }}
    steps:
      - name: build PARTNERS
        run: |
          echo "building for PARTNERS"
          yarn partners:build:live
  deploy_partners:
    runs-on: ubuntu-latest
    needs: build_partners
    steps:
      - name: deploy PARTNERS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_LIVE_US1_PARTNERS_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_US_EAST_REGION }}
          AWS_DISTRIBUTION_ID: ${{ secrets.AWS_LIVE_US1_PARTNERS_DISTRIBUTION_ID }}
        run: |
          echo "deploying to PARTNERS"
          yarn deploy:action
