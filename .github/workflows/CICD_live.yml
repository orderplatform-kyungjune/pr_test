name: deploy live

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'tag to deploy'
        required: true
        default: 'v'
        type: string
      label:
        description: 'label to deploy'
        required: true
        default: 'TORDER'
        type: choice
        options:
          - ALL
          - TORDER
          - GLOBAL
          - SAAS
          - SINGAPORE
          - US1
          - SYDNEY
          - UPLUS
          - PARTNERS

jobs:
  check_tag_exists:
    runs-on: ubuntu-latest
    outputs:
      tag_exists: ${{ steps.check_tag.outputs.tag_exists }}
      tag_name: ${{ steps.check_tag.outputs.tag_name }}
    steps:
      - name: Check if tag exists
        id: check_tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tagName = '${{ github.event.inputs.tag }}';
            const { data: tag } = await github.request('GET /repos/{owner}/{repo}/git/refs/tags/{tag}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tagName
            });

            if (tag) {
              core.setOutput('tag_exists', 'true');
              core.setOutput('tag_name', tagName);
            } else {
              core.setOutput('tag_exists', 'false');
            }

  deploy:
    runs-on: ubuntu-latest
    needs: check_tag_exists
    if: ${{ needs.check_tag_exists.outputs.tag_exists == 'true' }}
    strategy:
      matrix:
        label: [TORDER, SINGAPORE, US1, SYDNEY, UPLUS]
        include:
          - label: TORDER
            build_command: yarn origin:build:live
            aws_bucket: ${{ secrets.AWS_LIVE_BUCKET_NAME }}
            aws_region: ${{ secrets.AWS_REGION }}
            aws_distribution_id: ${{ secrets.AWS_LIVE_DISTRIBUTION_ID }}
          - label: SINGAPORE
            build_command: yarn sg:build:live
            aws_bucket: ${{ secrets.AWS_SG_BUCKET_NAME }}
            aws_region: ${{ secrets.AWS_SG_REGION }}
            aws_distribution_id: ${{ secrets.AWS_SG_DISTRIBUTION_ID }}
          - label: US1
            build_command: yarn us_east:build:live
            aws_bucket: ${{ secrets.AWS_US_EAST_BUCKET_NAME }}
            aws_region: ${{ secrets.AWS_US_EAST_REGION }}
            aws_distribution_id: ${{ secrets.AWS_US_EAST_DISTRIBUTION_ID }}
          - label: SYDNEY
            build_command: yarn sydney:build:live
            aws_bucket: ${{ secrets.AWS_SYDNEY_BUCKET_NAME }}
            aws_region: ${{ secrets.AWS_SYDNEY_REGION }}
            aws_distribution_id: ${{ secrets.AWS_SYDNEY_DISTRIBUTION_ID }}
          - label: UPLUS
            build_command: yarn uplus:build:live
            aws_bucket: ${{ secrets.AWS_LIVE_UPLUS_BUCKET_NAME }}
            aws_region: ${{ secrets.AWS_REGION }}
            aws_distribution_id: ${{ secrets.AWS_LIVE_UPLUS_DISTRIBUTION_ID }}

    steps:
      - name: Check out tag
        if: ${{ github.event.inputs.label == 'ALL' || matrix.label == github.event.inputs.label || (github.event.inputs.label == 'GLOBAL' && (matrix.label == 'SINGAPORE' || matrix.label == 'US_EAST' || matrix.label == 'SYDNEY')) || (github.event.inputs.label == 'SAAS' && matrix.label == 'UPLUS') }}
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.check_tag_exists.outputs.tag_name }}

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-admin-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        if: ${{ steps.node-cache.outputs.cache-hit != 'true' }}
        run: yarn

      - name: Build
        run: ${{ matrix.build_command }}

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ matrix.aws_bucket }}
          AWS_REGION: ${{ matrix.aws_region }}
          AWS_DISTRIBUTION_ID: ${{ matrix.aws_distribution_id || '' }}
        run: yarn deploy:action