name: Deploy to Develop

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'develop'
        type: string
      label:
        description: 'Label to deploy'
        required: true
        default: 'origin'
        type: choice
        options:
          - origin
          - global
          - uplus
          - brand1
          - partners

jobs:
  check_branch_exists:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # 적절한 버전으로 변경하세요

      - name: Install dependencies
        run: npm install @octokit/request

      - name: Check if branch exists
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await import('@octokit/request');
            const { request } = response.default;  // 혹은 필요한 함수에 따라 수정하세요
            const branchName = github.event.inputs.branch;
            const result = await request('GET /repos/{owner}/{repo}/branches/{branch}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branchName,
              headers: {
                authorization: `token ${process.env.GITHUB_TOKEN}`,
                accept: 'application/vnd.github.v3+json'
              }
            });

            if (result.status === 200) {
              core.setOutput('branch_exists', 'true');
              core.setOutput('branch_name', branchName);
            } else {
              core.setOutput('branch_exists', 'false');
            }

  deploy_origin:
    runs-on: ubuntu-latest
    needs: check_branch_exists
    if: github.event.inputs.label == 'origin' && needs.check_branch_exists.outputs.branch_exists == 'true'
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.check_branch_exists.outputs.branch_name }}

      - name: Echo Deployment Information
        run: |
          echo "Selected label: ${{ github.event.inputs.label }}"
          echo "Branch to deploy: ${{ github.event.inputs.branch }}"  
          echo "Unique identifier of branch: ${{ github.sha }}"