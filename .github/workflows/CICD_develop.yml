name: deploy develop

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch to deploy'
        required: true
        default: 'develop'
        type: string
      label:
        description: 'label to deploy'
        required: true
        default: 'TORDER'
        type: choice
        options:
          - ALL
          - TORDER
          - UPLUS
          - BRAND1

jobs:
  check_branch_exists:
    runs-on: ubuntu-latest
    outputs:
      branch_exists: ${{ steps.check_branch.outputs.branch_exists }}
      branch_name: ${{ steps.check_branch.outputs.branch_name }}
    steps:
      - name: Check if branch exists
        id: check_branch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = '${{ github.event.inputs.branch }}';
            const { data: branch } = await github.request('GET /repos/{owner}/{repo}/branches/{branch}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branchName
            });
            
            if (branch) {
              core.setOutput('branch_exists', 'true');
              core.setOutput('branch_name', branchName);
            } else {
              core.setOutput('branch_exists', 'false');
            }

  deploy:
    runs-on: ubuntu-latest
    needs: check_branch_exists
    if: ${{ needs.check_branch_exists.outputs.branch_exists == 'true' }}
    strategy:
      matrix:
        label: [ALL, TORDER, UPLUS, BRAND1]
        include:
          - label: TORDER
            build_command: yarn origin:build:dev
          - label: UPLUS
            build_command: yarn uplus:build:dev
          - label: BRAND1
            build_command: yarn brand1:build:dev
    steps:
      - name: Check out branch
        if: ${{ github.event.inputs.label == 'ALL' || matrix.label == github.event.inputs.label }}
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.check_branch_exists.outputs.branch_name }}

      - uses: actions/setup-node@v4
        if: ${{ github.event.inputs.label == 'ALL' || matrix.label == github.event.inputs.label }}
        with:
          node-version: "20.x"

      - name: Cache node modules
        if: ${{ github.event.inputs.label == 'ALL' || matrix.label == github.event.inputs.label }}
        id: node-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-admin-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        if: ${{ github.event.inputs.label == 'ALL' || matrix.label == github.event.inputs.label }}
        run: yarn

      - name: Set AWS Environment Variables
        if: ${{ github.event.inputs.label == 'ALL' || matrix.label == github.event.inputs.label }}
        id: set-aws-env
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const inputLabel = '${{ github.event.inputs.label }}';
            const label = '${{ matrix.label }}';
            if (inputLabel === 'ALL' || inputLabel === label) {
              let awsBucket, awsDistributionId;
              if (label === 'TORDER') {
                awsBucket = '${{ secrets.AWS_DEV_BUCKET_NAME }}';
                awsDistributionId = '';
              } else if (label === 'UPLUS') {
                awsBucket = '${{ secrets.AWS_DEV_UPLUS_BUCKET_NAME }}';
                awsDistributionId = '${{ secrets.AWS_DEV_UPLUS_DISTRIBUTION_ID }}';
              } else if (label === 'BRAND1') {
                awsBucket = '${{ secrets.AWS_DEV_BRAND1_BUCKET_NAME }}';
                awsDistributionId = '${{ secrets.AWS_DEV_BRAND1_DISTRIBUTION_ID }}';
              }
              core.exportVariable('AWS_BUCKET_NAME', awsBucket);
              core.exportVariable('AWS_DISTRIBUTION_ID', awsDistributionId);
            }

      - name: Build
        if: ${{ github.event.inputs.label == 'ALL' || matrix.label == github.event.inputs.label }}
        run: ${{ matrix.build_command }}

      - name: Deploy
        if: ${{ github.event.inputs.label == 'ALL' || matrix.label == github.event.inputs.label }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME: ${{ env.AWS_BUCKET_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DISTRIBUTION_ID: ${{ env.AWS_DISTRIBUTION_ID }}
        run: yarn deploy:action