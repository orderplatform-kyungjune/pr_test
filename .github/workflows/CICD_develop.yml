name: Deploy to Develop

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'develop'
        type: string
      label:
        description: 'Label to deploy'
        required: true
        default: 'origin'
        type: choice
        options:
          - origin
          - global
          - uplus
          - brand1
          - partners

jobs:
  check_branch_exists:
    runs-on: ubuntu-latest
    outputs:
      branch_exists: ${{ steps.check_branch.outputs.branch_exists }}
      branch_name: ${{ steps.check_branch.outputs.branch_name }}
    steps:
      - name: Check if branch exists
        id: check_branch
        run: |
          node -e "const axios = require('axios');
          const owner = process.env.GITHUB_REPOSITORY_OWNER;
          const repo = process.env.GITHUB_REPOSITORY.split('/')[1];
          const branch = '${{ github.event.inputs.branch }}';

          axios.get(`https://api.github.com/repos/${owner}/${repo}/branches`)
            .then(response => {
              const branches = response.data;
              const branchExists = branches.some(b => b.name === \`refs/heads/\${branch}\`);
              if (branchExists) {
                console.log(`::set-output name=branch_exists::true`);
                console.log(`::set-output name=branch_name::\${branch}`);
              } else {
                console.log(`::set-output name=branch_exists::false`);
              }
            })
            .catch(error => {
              console.error(`Error fetching branches: \${error.message}`);
              process.exit(1);
            });"
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}

  deploy_origin:
    runs-on: ubuntu-latest
    needs: check_branch_exists
    if: github.event.inputs.label == 'origin' && needs.check_branch_exists.outputs.branch_exists == 'true'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.check_branch_exists.outputs.branch_name }}

      - name: Echo Deployment Information
        run: |
          echo "Selected label: ${{ github.event.inputs.label }}"
          echo "Branch to deploy: ${{ github.event.inputs.branch }}"  
          echo "Unique identifier of branch: ${{ github.sha }}"