name: Update D- Labels

on:
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '10 0 * * *'   # 매일 KST 오전 9시 10분 (UTC 00:10)
    - cron: '13-59/3 0 * * *' # 매일 KST 오전 9시 13분부터 3분마다 (UTC 00:13-00:59)

jobs:
  update-labels:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Update D- labels
        id: update-labels
        uses: actions/github-script@v7
        with:
          script: |
            const { GitHub, context } = require('@actions/github');
            const token = process.env.GITHUB_TOKEN;
            const github = new GitHub(token);

            async function updateLabels() {
              const { data: pullRequests } = await github.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open'
              });

              for (const pr of pullRequests) {
                const { data: labels } = await github.issues.listLabelsOnIssue({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number
                });

                for (const label of labels) {
                  if (label.name.startsWith('D-')) {
                    const currentLabel = parseInt(label.name.slice(2));
                    if (currentLabel > 0) {
                      const newLabelName = `D-${currentLabel - 1}`;
                      await github.issues.addLabels({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: pr.number,
                        labels: [newLabelName]
                      });
                      await github.issues.removeLabel({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: pr.number,
                        name: label.name
                      });
                    }
                    break;
                  }
                }
              }
            }

            updateLabels();
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}